{"ast":null,"code":"var _jsxFileName = \"/Users/jacktabb/weatherWebpage/reactapp3/frontend/src/components/CityInfo.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Box, Button, ButtonGroup, Flex, HStack, IconButton, Input, Text } from '@chakra-ui/react';\nimport { FaLocationArrow, FaTimes } from 'react-icons/fa';\nimport { useJsApiLoader, GoogleMap } from '@react-google-maps/api';\nimport './CityInfo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst center = {\n  lat: 48.8584,\n  lng: 2.2945\n};\nfunction CityInfo() {\n  _s();\n  const [city, setCity] = useState(\"\");\n  const [geo, setGeo] = useState([]);\n  const [weather, setWeather] = useState([]);\n  const apiKey = 'AIzaSyB69lSr663-tF6TivTm-K1l79HomYTqxDE';\n  console.log(apiKey);\n  const {\n    isLoaded\n  } = useJsApiLoader({\n    googleMapsApiKey: apiKey\n  });\n  if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this);\n  }\n  const geoCode = async () => {\n    console.log(city);\n    const geoCodeServiceUrl = \"http://localhost:4000/api/geolocation?address=\";\n    const response = await fetch(geoCodeServiceUrl + city);\n    var dataGeo = await response.json(); //await for response. store response in data\n    console.log(dataGeo);\n    setGeo(dataGeo);\n  };\n  const checkWeather = async () => {\n    const weatherServiceUrl = \"http://localhost:4000/api/weather?units=imperial&city=\";\n    const response = await fetch(weatherServiceUrl + city); //make request to server\n    var dataWeather = await response.json(); //await for response. store response in data \n    console.log(dataWeather);\n    setWeather(dataWeather);\n  };\n  const handleChange = e => {\n    e.preventDefault();\n    setCity(e.target.value);\n  };\n  const handleSearch = () => {\n    Promise.all([checkWeather(), geoCode()]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"cityInput\",\n        placeholder: \"enter city name\",\n        spellCheck: \"false\",\n        value: city,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"searchButton\",\n        onClick: handleSearch,\n        children: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"city\",\n        children: [\"City: \", weather.name && weather.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"temp\",\n        children: [\"Temp: \", weather.main && Math.round(weather.main.temp) + \" F\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"humidity\",\n        children: [\"Humidity: \", weather.main && weather.main.humidity + \" % humidity\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"wind\",\n        children: [\"Wind: \", weather.wind && weather.wind.speed + \" mph\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"feelsLike\",\n        children: [\"Feels like: \", weather.main && Math.round(weather.main.feels_like) + \" F\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"clouds\",\n        children: weather.weather && weather.weather[0].main + \" skies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"lat\",\n        children: [\"ln: \", geo.results && geo.results[0].geometry.location.lng]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"lng\",\n        children: [\"lat: \", geo.results && geo.results[0].geometry.location.lat]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Flex, {\n      position: \"relative\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      bgColor: \"blue.200\",\n      h: \"100vh\",\n      w: \"100vw\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        h: \"100%\",\n        w: \"100%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n        center: center,\n        zoom: 15,\n        mapContainerStyle: {\n          width: '50%',\n          height: '50%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s(CityInfo, \"s6NuX5kzQtzTYh1YigMlqXhdvDw=\", false, function () {\n  return [useJsApiLoader];\n});\n_c = CityInfo;\nexport default CityInfo;\nvar _c;\n$RefreshReg$(_c, \"CityInfo\");","map":{"version":3,"names":["useState","Box","Button","ButtonGroup","Flex","HStack","IconButton","Input","Text","FaLocationArrow","FaTimes","useJsApiLoader","GoogleMap","jsxDEV","_jsxDEV","center","lat","lng","CityInfo","_s","city","setCity","geo","setGeo","weather","setWeather","apiKey","console","log","isLoaded","googleMapsApiKey","children","fileName","_jsxFileName","lineNumber","columnNumber","geoCode","geoCodeServiceUrl","response","fetch","dataGeo","json","checkWeather","weatherServiceUrl","dataWeather","handleChange","e","preventDefault","target","value","handleSearch","Promise","all","id","className","type","placeholder","spellCheck","onChange","onClick","name","main","Math","round","temp","humidity","wind","speed","feels_like","results","geometry","location","position","flexDirection","alignItems","bgColor","h","w","left","top","zoom","mapContainerStyle","width","height","_c","$RefreshReg$"],"sources":["/Users/jacktabb/weatherWebpage/reactapp3/frontend/src/components/CityInfo.js"],"sourcesContent":["import { useState } from 'react'\nimport {\n    Box,\n    Button,\n    ButtonGroup,\n    Flex,\n    HStack,\n    IconButton,\n    Input,\n    Text,\n} from '@chakra-ui/react'\nimport { FaLocationArrow, FaTimes } from 'react-icons/fa'\nimport { useJsApiLoader, GoogleMap } from '@react-google-maps/api';\nimport './CityInfo.css'\n\nconst center = { lat: 48.8584, lng: 2.2945 }\n\nfunction CityInfo() {\n\n    const [city, setCity] = useState(\"\");\n    const [geo, setGeo] = useState([]);\n    const [weather, setWeather] = useState([]);\n\n    const apiKey = 'AIzaSyB69lSr663-tF6TivTm-K1l79HomYTqxDE';\n    console.log(apiKey);\n    const { isLoaded } = useJsApiLoader({\n        googleMapsApiKey: apiKey,\n    })\n\n    if (!isLoaded) {\n        return <div>Loading map</div>;\n    }\n\n    const geoCode = async () => {\n        console.log(city);\n        const geoCodeServiceUrl =\n            \"http://localhost:4000/api/geolocation?address=\";\n        const response = await fetch(geoCodeServiceUrl + city);\n        var dataGeo = await response.json();//await for response. store response in data\n        console.log(dataGeo);\n        setGeo(dataGeo);\n    }\n\n    const checkWeather = async () => {\n\n        const weatherServiceUrl =\n            \"http://localhost:4000/api/weather?units=imperial&city=\";\n        const response = await fetch(weatherServiceUrl + city);//make request to server\n        var dataWeather = await response.json();//await for response. store response in data \n        console.log(dataWeather);\n        setWeather(dataWeather);\n    }\n\n\n    const handleChange = (e) => {\n        e.preventDefault();\n        setCity(e.target.value);\n    };\n\n    const handleSearch = () => {\n        Promise.all([checkWeather(), geoCode()]);\n    }\n\n    return (\n\n        <div id=\"container\">\n            <div className=\"search\">\n\n                <input\n                    type=\"text\"\n                    id=\"cityInput\"\n                    placeholder=\"enter city name\"\n                    spellCheck=\"false\"\n                    value={city}\n                    onChange={handleChange}\n                />\n                <button id=\"searchButton\" onClick={handleSearch}>search</button>\n            </div>\n\n            <div className=\"weather\">\n                <h1 className=\"city\">City: {weather.name && weather.name}</h1>\n                <h2 className=\"temp\">Temp: {weather.main && Math.round(weather.main.temp) + \" F\"}</h2>\n                <h3 className=\"humidity\">Humidity: {weather.main && weather.main.humidity + \" % humidity\"}</h3>\n                <h4 className=\"wind\">Wind: {weather.wind && weather.wind.speed + \" mph\"}</h4>\n                <h5 className=\"feelsLike\">Feels like: {weather.main && Math.round(weather.main.feels_like) + \" F\"}</h5>\n                <h6 className=\"clouds\">{weather.weather && weather.weather[0].main + \" skies\"}</h6>\n            </div>\n\n            <div className=\"location\">\n                <h1 className=\"lat\">ln: {geo.results && geo.results[0].geometry.location.lng}</h1>\n                <h2 className=\"lng\">lat: {geo.results && geo.results[0].geometry.location.lat}</h2>\n            </div>\n\n\n            <Flex\n                position='relative'\n                flexDirection='column'\n                alignItems='center'\n                bgColor='blue.200'\n                h='100vh'\n                w='100vw'\n            >\n                <Box position='absolute' left={0} top={0} h='100%' w='100%'></Box>\n                {/*google map box*/}\n                <GoogleMap\n                    center={center}\n                    zoom={15}\n                    mapContainerStyle={{ width: '50%', height: '50%' }}\n                >\n                    {/*display...*/}\n                </GoogleMap>\n            </Flex>\n        </div>\n\n    );\n}\nexport default CityInfo;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SACIC,GAAG,EACHC,MAAM,EACNC,WAAW,EACXC,IAAI,EACJC,MAAM,EACNC,UAAU,EACVC,KAAK,EACLC,IAAI,QACD,kBAAkB;AACzB,SAASC,eAAe,EAAEC,OAAO,QAAQ,gBAAgB;AACzD,SAASC,cAAc,EAAEC,SAAS,QAAQ,wBAAwB;AAClE,OAAO,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,MAAM,GAAG;EAAEC,GAAG,EAAE,OAAO;EAAEC,GAAG,EAAE;AAAO,CAAC;AAE5C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAEhB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACsB,GAAG,EAAEC,MAAM,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAM0B,MAAM,GAAG,yCAAyC;EACxDC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB,MAAM;IAAEG;EAAS,CAAC,GAAGlB,cAAc,CAAC;IAChCmB,gBAAgB,EAAEJ;EACtB,CAAC,CAAC;EAEF,IAAI,CAACG,QAAQ,EAAE;IACX,oBAAOf,OAAA;MAAAiB,QAAA,EAAK;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACjC;EAEA,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAY;IACxBT,OAAO,CAACC,GAAG,CAACR,IAAI,CAAC;IACjB,MAAMiB,iBAAiB,GACnB,gDAAgD;IACpD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,iBAAiB,GAAGjB,IAAI,CAAC;IACtD,IAAIoB,OAAO,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;IACpCd,OAAO,CAACC,GAAG,CAACY,OAAO,CAAC;IACpBjB,MAAM,CAACiB,OAAO,CAAC;EACnB,CAAC;EAED,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;IAE7B,MAAMC,iBAAiB,GACnB,wDAAwD;IAC5D,MAAML,QAAQ,GAAG,MAAMC,KAAK,CAACI,iBAAiB,GAAGvB,IAAI,CAAC,CAAC;IACvD,IAAIwB,WAAW,GAAG,MAAMN,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;IACxCd,OAAO,CAACC,GAAG,CAACgB,WAAW,CAAC;IACxBnB,UAAU,CAACmB,WAAW,CAAC;EAC3B,CAAC;EAGD,MAAMC,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB1B,OAAO,CAACyB,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;EAC3B,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvBC,OAAO,CAACC,GAAG,CAAC,CAACV,YAAY,CAAC,CAAC,EAAEN,OAAO,CAAC,CAAC,CAAC,CAAC;EAC5C,CAAC;EAED,oBAEItB,OAAA;IAAKuC,EAAE,EAAC,WAAW;IAAAtB,QAAA,gBACfjB,OAAA;MAAKwC,SAAS,EAAC,QAAQ;MAAAvB,QAAA,gBAEnBjB,OAAA;QACIyC,IAAI,EAAC,MAAM;QACXF,EAAE,EAAC,WAAW;QACdG,WAAW,EAAC,iBAAiB;QAC7BC,UAAU,EAAC,OAAO;QAClBR,KAAK,EAAE7B,IAAK;QACZsC,QAAQ,EAAEb;MAAa;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CAAC,eACFrB,OAAA;QAAQuC,EAAE,EAAC,cAAc;QAACM,OAAO,EAAET,YAAa;QAAAnB,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC,eAENrB,OAAA;MAAKwC,SAAS,EAAC,SAAS;MAAAvB,QAAA,gBACpBjB,OAAA;QAAIwC,SAAS,EAAC,MAAM;QAAAvB,QAAA,GAAC,QAAM,EAACP,OAAO,CAACoC,IAAI,IAAIpC,OAAO,CAACoC,IAAI;MAAA;QAAA5B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC9DrB,OAAA;QAAIwC,SAAS,EAAC,MAAM;QAAAvB,QAAA,GAAC,QAAM,EAACP,OAAO,CAACqC,IAAI,IAAIC,IAAI,CAACC,KAAK,CAACvC,OAAO,CAACqC,IAAI,CAACG,IAAI,CAAC,GAAG,IAAI;MAAA;QAAAhC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtFrB,OAAA;QAAIwC,SAAS,EAAC,UAAU;QAAAvB,QAAA,GAAC,YAAU,EAACP,OAAO,CAACqC,IAAI,IAAIrC,OAAO,CAACqC,IAAI,CAACI,QAAQ,GAAG,aAAa;MAAA;QAAAjC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC/FrB,OAAA;QAAIwC,SAAS,EAAC,MAAM;QAAAvB,QAAA,GAAC,QAAM,EAACP,OAAO,CAAC0C,IAAI,IAAI1C,OAAO,CAAC0C,IAAI,CAACC,KAAK,GAAG,MAAM;MAAA;QAAAnC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC7ErB,OAAA;QAAIwC,SAAS,EAAC,WAAW;QAAAvB,QAAA,GAAC,cAAY,EAACP,OAAO,CAACqC,IAAI,IAAIC,IAAI,CAACC,KAAK,CAACvC,OAAO,CAACqC,IAAI,CAACO,UAAU,CAAC,GAAG,IAAI;MAAA;QAAApC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvGrB,OAAA;QAAIwC,SAAS,EAAC,QAAQ;QAAAvB,QAAA,EAAEP,OAAO,CAACA,OAAO,IAAIA,OAAO,CAACA,OAAO,CAAC,CAAC,CAAC,CAACqC,IAAI,GAAG;MAAQ;QAAA7B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClF,CAAC,eAENrB,OAAA;MAAKwC,SAAS,EAAC,UAAU;MAAAvB,QAAA,gBACrBjB,OAAA;QAAIwC,SAAS,EAAC,KAAK;QAAAvB,QAAA,GAAC,MAAI,EAACT,GAAG,CAAC+C,OAAO,IAAI/C,GAAG,CAAC+C,OAAO,CAAC,CAAC,CAAC,CAACC,QAAQ,CAACC,QAAQ,CAACtD,GAAG;MAAA;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAClFrB,OAAA;QAAIwC,SAAS,EAAC,KAAK;QAAAvB,QAAA,GAAC,OAAK,EAACT,GAAG,CAAC+C,OAAO,IAAI/C,GAAG,CAAC+C,OAAO,CAAC,CAAC,CAAC,CAACC,QAAQ,CAACC,QAAQ,CAACvD,GAAG;MAAA;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClF,CAAC,eAGNrB,OAAA,CAACV,IAAI;MACDoE,QAAQ,EAAC,UAAU;MACnBC,aAAa,EAAC,QAAQ;MACtBC,UAAU,EAAC,QAAQ;MACnBC,OAAO,EAAC,UAAU;MAClBC,CAAC,EAAC,OAAO;MACTC,CAAC,EAAC,OAAO;MAAA9C,QAAA,gBAETjB,OAAA,CAACb,GAAG;QAACuE,QAAQ,EAAC,UAAU;QAACM,IAAI,EAAE,CAAE;QAACC,GAAG,EAAE,CAAE;QAACH,CAAC,EAAC,MAAM;QAACC,CAAC,EAAC;MAAM;QAAA7C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAElErB,OAAA,CAACF,SAAS;QACNG,MAAM,EAAEA,MAAO;QACfiE,IAAI,EAAE,EAAG;QACTC,iBAAiB,EAAE;UAAEC,KAAK,EAAE,KAAK;UAAEC,MAAM,EAAE;QAAM;MAAE;QAAAnD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAG5C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAGd;AAAChB,EAAA,CAlGQD,QAAQ;EAAA,QAQQP,cAAc;AAAA;AAAAyE,EAAA,GAR9BlE,QAAQ;AAmGjB,eAAeA,QAAQ;AAAC,IAAAkE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}